{"ast":null,"code":"'use strict';\n/**\n * @protected\n * @class\n * @constructor\n * @param {String|Number} logLevel - Log level\n */\n\nvar Logger = module.exports = function (logLevel) {\n  if (typeof logLevel === 'string') {\n    logLevel = LogLevels[logLevel];\n  }\n\n  if (!logLevel) {\n    logLevel = LogLevels.INFO;\n  }\n\n  this._logLevel = logLevel;\n};\n/**\n * @memberof Logger\n */\n\n\nvar LogLevels = Logger.LogLevels = {\n  \"DEBUG\": 1,\n  \"INFO\": 2,\n  \"WARN\": 3,\n  \"ERROR\": 4,\n  \"FATAL\": 5\n};\n/**\n * Output log\n *\n * @param {String} level - Logging target level\n * @param {String} message - Message to log\n */\n\nLogger.prototype.log = function (level, message) {\n  if (this._logLevel <= level) {\n    if (level < LogLevels.ERROR) {\n      console.log(message);\n    } else {\n      console.error(message);\n    }\n  }\n};\n\nfor (var level in LogLevels) {\n  Logger.prototype[level.toLowerCase()] = createLoggerFunction(LogLevels[level]);\n}\n\nfunction createLoggerFunction(level) {\n  return function (message) {\n    this.log(level, message);\n  };\n}","map":{"version":3,"sources":["/Users/gcarminati/Desktop/OmniStudio/OmniProxy/react-express-proxy-sample/node_modules/jsforce/lib/logger.js"],"names":["Logger","module","exports","logLevel","LogLevels","INFO","_logLevel","prototype","log","level","message","ERROR","console","error","toLowerCase","createLoggerFunction"],"mappings":"AAAA;AAEA;;;;;;;AAMA,IAAIA,MAAM,GAAGC,MAAM,CAACC,OAAP,GAAiB,UAASC,QAAT,EAAmB;AAC/C,MAAI,OAAOA,QAAP,KAAoB,QAAxB,EAAkC;AAChCA,IAAAA,QAAQ,GAAGC,SAAS,CAACD,QAAD,CAApB;AACD;;AACD,MAAI,CAACA,QAAL,EAAe;AACbA,IAAAA,QAAQ,GAAGC,SAAS,CAACC,IAArB;AACD;;AACD,OAAKC,SAAL,GAAiBH,QAAjB;AACD,CARD;AAUA;;;;;AAGA,IAAIC,SAAS,GAAGJ,MAAM,CAACI,SAAP,GAAmB;AACjC,WAAU,CADuB;AAEjC,UAAS,CAFwB;AAGjC,UAAS,CAHwB;AAIjC,WAAU,CAJuB;AAKjC,WAAU;AALuB,CAAnC;AAQA;;;;;;;AAMAJ,MAAM,CAACO,SAAP,CAAiBC,GAAjB,GAAuB,UAASC,KAAT,EAAgBC,OAAhB,EAAyB;AAC9C,MAAI,KAAKJ,SAAL,IAAkBG,KAAtB,EAA6B;AAC3B,QAAIA,KAAK,GAAGL,SAAS,CAACO,KAAtB,EAA6B;AAC3BC,MAAAA,OAAO,CAACJ,GAAR,CAAYE,OAAZ;AACD,KAFD,MAEO;AACLE,MAAAA,OAAO,CAACC,KAAR,CAAcH,OAAd;AACD;AACF;AACF,CARD;;AAUA,KAAK,IAAID,KAAT,IAAkBL,SAAlB,EAA6B;AAC3BJ,EAAAA,MAAM,CAACO,SAAP,CAAiBE,KAAK,CAACK,WAAN,EAAjB,IAAwCC,oBAAoB,CAACX,SAAS,CAACK,KAAD,CAAV,CAA5D;AACD;;AAED,SAASM,oBAAT,CAA8BN,KAA9B,EAAqC;AACnC,SAAO,UAASC,OAAT,EAAkB;AAAE,SAAKF,GAAL,CAASC,KAAT,EAAgBC,OAAhB;AAA2B,GAAtD;AACD","sourcesContent":["'use strict';\n\n/**\n * @protected\n * @class\n * @constructor\n * @param {String|Number} logLevel - Log level\n */\nvar Logger = module.exports = function(logLevel) {\n  if (typeof logLevel === 'string') {\n    logLevel = LogLevels[logLevel];\n  }\n  if (!logLevel) {\n    logLevel = LogLevels.INFO;\n  }\n  this._logLevel = logLevel;\n};\n\n/**\n * @memberof Logger\n */\nvar LogLevels = Logger.LogLevels = {\n  \"DEBUG\" : 1,\n  \"INFO\" : 2,\n  \"WARN\" : 3,\n  \"ERROR\" : 4,\n  \"FATAL\" : 5\n};\n\n/**\n * Output log\n *\n * @param {String} level - Logging target level\n * @param {String} message - Message to log\n */\nLogger.prototype.log = function(level, message) {\n  if (this._logLevel <= level) {\n    if (level < LogLevels.ERROR) {\n      console.log(message);\n    } else {\n      console.error(message);\n    }\n  }\n};\n\nfor (var level in LogLevels) {\n  Logger.prototype[level.toLowerCase()] = createLoggerFunction(LogLevels[level]);\n}\n\nfunction createLoggerFunction(level) {\n  return function(message) { this.log(level, message); };\n}\n"]},"metadata":{},"sourceType":"script"}