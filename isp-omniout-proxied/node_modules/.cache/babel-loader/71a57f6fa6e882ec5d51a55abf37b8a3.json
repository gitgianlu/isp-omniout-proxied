{"ast":null,"code":"/*global window, document */\n'use strict';\n\nvar _index = 0;\nmodule.exports = {\n  supported: typeof window !== 'undefined' && typeof document !== 'undefined',\n  createRequest: function (jsonpParam, timeout) {\n    jsonpParam = jsonpParam || 'callback';\n    timeout = timeout || 10000;\n    return function (params, callback) {\n      if (params.method.toUpperCase() !== 'GET') {\n        return callback(new Error('JSONP only supports GET request.'));\n      }\n\n      var cbFuncName = '_jsforce_jsonpCallback_' + ++_index;\n      var callbacks = window;\n      var url = params.url;\n      url += url.indexOf('?') > 0 ? '&' : '?';\n      url += jsonpParam + '=' + cbFuncName;\n      var script = document.createElement('script');\n      script.type = 'text/javascript';\n      script.src = url;\n      document.documentElement.appendChild(script);\n      var pid = setTimeout(function () {\n        cleanup();\n        callback(new Error(\"JSONP call time out.\"));\n      }, timeout);\n\n      callbacks[cbFuncName] = function (res) {\n        cleanup();\n        callback(null, {\n          statusCode: 200,\n          headers: {\n            \"content-type\": \"application/json\"\n          },\n          body: JSON.stringify(res)\n        });\n      };\n\n      var cleanup = function () {\n        clearTimeout(pid);\n        document.documentElement.removeChild(script);\n        delete callbacks[cbFuncName];\n      };\n    };\n  }\n};","map":{"version":3,"sources":["/Users/gcarminati/Desktop/OmniStudio/OmniProxy/react-express-proxy-sample/node_modules/jsforce/lib/browser/jsonp.js"],"names":["_index","module","exports","supported","window","document","createRequest","jsonpParam","timeout","params","callback","method","toUpperCase","Error","cbFuncName","callbacks","url","indexOf","script","createElement","type","src","documentElement","appendChild","pid","setTimeout","cleanup","res","statusCode","headers","body","JSON","stringify","clearTimeout","removeChild"],"mappings":"AAAA;AACA;;AAEA,IAAIA,MAAM,GAAG,CAAb;AAEAC,MAAM,CAACC,OAAP,GAAiB;AAEfC,EAAAA,SAAS,EAAE,OAAOC,MAAP,KAAkB,WAAlB,IAAiC,OAAOC,QAAP,KAAoB,WAFjD;AAIfC,EAAAA,aAAa,EAAE,UAASC,UAAT,EAAqBC,OAArB,EAA8B;AAC3CD,IAAAA,UAAU,GAAGA,UAAU,IAAI,UAA3B;AACAC,IAAAA,OAAO,GAAGA,OAAO,IAAI,KAArB;AAEA,WAAO,UAASC,MAAT,EAAiBC,QAAjB,EAA2B;AAChC,UAAID,MAAM,CAACE,MAAP,CAAcC,WAAd,OAAgC,KAApC,EAA2C;AACzC,eAAOF,QAAQ,CAAC,IAAIG,KAAJ,CAAU,kCAAV,CAAD,CAAf;AACD;;AACD,UAAIC,UAAU,GAAG,4BAA6B,EAAEd,MAAhD;AACA,UAAIe,SAAS,GAAGX,MAAhB;AACA,UAAIY,GAAG,GAAGP,MAAM,CAACO,GAAjB;AACAA,MAAAA,GAAG,IAAIA,GAAG,CAACC,OAAJ,CAAY,GAAZ,IAAiB,CAAjB,GAAqB,GAArB,GAA2B,GAAlC;AACAD,MAAAA,GAAG,IAAIT,UAAU,GAAG,GAAb,GAAmBO,UAA1B;AAEA,UAAII,MAAM,GAAGb,QAAQ,CAACc,aAAT,CAAuB,QAAvB,CAAb;AACAD,MAAAA,MAAM,CAACE,IAAP,GAAc,iBAAd;AACAF,MAAAA,MAAM,CAACG,GAAP,GAAaL,GAAb;AACAX,MAAAA,QAAQ,CAACiB,eAAT,CAAyBC,WAAzB,CAAqCL,MAArC;AAEA,UAAIM,GAAG,GAAGC,UAAU,CAAC,YAAW;AAC9BC,QAAAA,OAAO;AACPhB,QAAAA,QAAQ,CAAC,IAAIG,KAAJ,CAAU,sBAAV,CAAD,CAAR;AACD,OAHmB,EAGjBL,OAHiB,CAApB;;AAKAO,MAAAA,SAAS,CAACD,UAAD,CAAT,GAAwB,UAASa,GAAT,EAAc;AACpCD,QAAAA,OAAO;AACPhB,QAAAA,QAAQ,CAAC,IAAD,EAAO;AACbkB,UAAAA,UAAU,EAAE,GADC;AAEbC,UAAAA,OAAO,EAAE;AAAE,4BAAgB;AAAlB,WAFI;AAGbC,UAAAA,IAAI,EAAEC,IAAI,CAACC,SAAL,CAAeL,GAAf;AAHO,SAAP,CAAR;AAKD,OAPD;;AASA,UAAID,OAAO,GAAG,YAAW;AACvBO,QAAAA,YAAY,CAACT,GAAD,CAAZ;AACAnB,QAAAA,QAAQ,CAACiB,eAAT,CAAyBY,WAAzB,CAAqChB,MAArC;AACA,eAAOH,SAAS,CAACD,UAAD,CAAhB;AACD,OAJD;AAKD,KAlCD;AAoCD;AA5Cc,CAAjB","sourcesContent":["/*global window, document */\n'use strict';\n\nvar _index = 0;\n\nmodule.exports = {\n\n  supported: typeof window !== 'undefined' && typeof document !== 'undefined',\n\n  createRequest: function(jsonpParam, timeout) {\n    jsonpParam = jsonpParam || 'callback';\n    timeout = timeout || 10000;\n\n    return function(params, callback) {\n      if (params.method.toUpperCase() !== 'GET') {\n        return callback(new Error('JSONP only supports GET request.'));\n      }\n      var cbFuncName = '_jsforce_jsonpCallback_' + (++_index);\n      var callbacks = window;\n      var url = params.url;\n      url += url.indexOf('?')>0 ? '&' : '?';\n      url += jsonpParam + '=' + cbFuncName;\n\n      var script = document.createElement('script');\n      script.type = 'text/javascript';\n      script.src = url;\n      document.documentElement.appendChild(script);\n\n      var pid = setTimeout(function() {\n        cleanup();\n        callback(new Error(\"JSONP call time out.\"));\n      }, timeout);\n\n      callbacks[cbFuncName] = function(res) {\n        cleanup();\n        callback(null, {\n          statusCode: 200,\n          headers: { \"content-type\": \"application/json\" },\n          body: JSON.stringify(res)\n        });\n      };\n\n      var cleanup = function() {\n        clearTimeout(pid);\n        document.documentElement.removeChild(script);\n        delete callbacks[cbFuncName];\n      };\n    };\n\n  }\n\n};"]},"metadata":{},"sourceType":"script"}