{"ast":null,"code":"// Generated by CoffeeScript 1.12.7\nvar Stringifier, get, stream, util;\nstream = require('stream');\nutil = require('util');\nget = require('lodash.get');\n\nmodule.exports = function () {\n  var callback, chunks, data, options, stringifier;\n\n  if (arguments.length === 3) {\n    data = arguments[0];\n    options = arguments[1];\n    callback = arguments[2];\n  } else if (arguments.length === 2) {\n    if (Array.isArray(arguments[0])) {\n      data = arguments[0];\n    } else {\n      options = arguments[0];\n    }\n\n    if (typeof arguments[1] === 'function') {\n      callback = arguments[1];\n    } else {\n      options = arguments[1];\n    }\n  } else if (arguments.length === 1) {\n    if (typeof arguments[0] === 'function') {\n      callback = arguments[0];\n    } else if (Array.isArray(arguments[0])) {\n      data = arguments[0];\n    } else {\n      options = arguments[0];\n    }\n  }\n\n  if (options == null) {\n    options = {};\n  }\n\n  stringifier = new Stringifier(options);\n\n  if (data) {\n    process.nextTick(function () {\n      var d, j, len;\n\n      for (j = 0, len = data.length; j < len; j++) {\n        d = data[j];\n        stringifier.write(d);\n      }\n\n      return stringifier.end();\n    });\n  }\n\n  if (callback) {\n    chunks = [];\n    stringifier.on('readable', function () {\n      var chunk, results;\n      results = [];\n\n      while (chunk = stringifier.read()) {\n        results.push(chunks.push(chunk));\n      }\n\n      return results;\n    });\n    stringifier.on('error', function (err) {\n      return callback(err);\n    });\n    stringifier.on('end', function () {\n      return callback(null, chunks.join(''));\n    });\n  }\n\n  return stringifier;\n};\n\nStringifier = function (opts) {\n  var base, base1, base10, base11, base12, base13, base2, base3, base4, base5, base6, base7, base8, base9, k, options, v;\n\n  if (opts == null) {\n    opts = {};\n  }\n\n  options = {};\n\n  for (k in opts) {\n    v = opts[k];\n    options[k] = v;\n  }\n\n  stream.Transform.call(this, options);\n  this.options = options;\n\n  if ((base = this.options).delimiter == null) {\n    base.delimiter = ',';\n  }\n\n  if ((base1 = this.options).quote == null) {\n    base1.quote = '\"';\n  }\n\n  if ((base2 = this.options).quoted == null) {\n    base2.quoted = false;\n  }\n\n  if ((base3 = this.options).quotedEmpty == null) {\n    base3.quotedEmpty = void 0;\n  }\n\n  if ((base4 = this.options).quotedString == null) {\n    base4.quotedString = false;\n  }\n\n  if ((base5 = this.options).eof == null) {\n    base5.eof = true;\n  }\n\n  if ((base6 = this.options).escape == null) {\n    base6.escape = '\"';\n  }\n\n  if ((base7 = this.options).columns == null) {\n    base7.columns = null;\n  }\n\n  if ((base8 = this.options).header == null) {\n    base8.header = false;\n  }\n\n  if ((base9 = this.options).formatters == null) {\n    base9.formatters = {};\n  }\n\n  if ((base10 = this.options.formatters).date == null) {\n    base10.date = function (value) {\n      return '' + value.getTime();\n    };\n  }\n\n  if ((base11 = this.options.formatters).bool == null) {\n    base11.bool = function (value) {\n      if (value) {\n        return '1';\n      } else {\n        return '';\n      }\n    };\n  }\n\n  if ((base12 = this.options.formatters).object == null) {\n    base12.object = function (value) {\n      return JSON.stringify(value);\n    };\n  }\n\n  if ((base13 = this.options).rowDelimiter == null) {\n    base13.rowDelimiter = '\\n';\n  }\n\n  if (this.countWriten == null) {\n    this.countWriten = 0;\n  }\n\n  switch (this.options.rowDelimiter) {\n    case 'auto':\n      this.options.rowDelimiter = null;\n      break;\n\n    case 'unix':\n      this.options.rowDelimiter = \"\\n\";\n      break;\n\n    case 'mac':\n      this.options.rowDelimiter = \"\\r\";\n      break;\n\n    case 'windows':\n      this.options.rowDelimiter = \"\\r\\n\";\n      break;\n\n    case 'unicode':\n      this.options.rowDelimiter = \"\\u2028\";\n  }\n\n  return this;\n};\n\nutil.inherits(Stringifier, stream.Transform);\nmodule.exports.Stringifier = Stringifier;\n\nStringifier.prototype.headers = function () {\n  var k, label, labels;\n\n  if (!this.options.header) {\n    return;\n  }\n\n  if (!this.options.columns) {\n    return;\n  }\n\n  labels = this.options.columns;\n\n  if (typeof labels === 'object') {\n    labels = function () {\n      var results;\n      results = [];\n\n      for (k in labels) {\n        label = labels[k];\n        results.push(label);\n      }\n\n      return results;\n    }();\n  }\n\n  if (this.options.eof) {\n    labels = this.stringify(labels) + this.options.rowDelimiter;\n  } else {\n    labels = this.stringify(labels);\n  }\n\n  return stream.Transform.prototype.write.call(this, labels);\n};\n\nStringifier.prototype.end = function (chunk, encoding, callback) {\n  if (this.countWriten === 0) {\n    this.headers();\n  }\n\n  return stream.Transform.prototype.end.apply(this, arguments);\n};\n\nStringifier.prototype.write = function (chunk, encoding, callback) {\n  var base, e, preserve;\n\n  if (chunk == null) {\n    return;\n  }\n\n  preserve = typeof chunk !== 'object';\n\n  if (!preserve) {\n    if (this.countWriten === 0 && !Array.isArray(chunk)) {\n      if ((base = this.options).columns == null) {\n        base.columns = Object.keys(chunk);\n      }\n    }\n\n    try {\n      this.emit('record', chunk, this.countWriten);\n    } catch (error) {\n      e = error;\n      return this.emit('error', e);\n    }\n\n    if (this.options.eof) {\n      chunk = this.stringify(chunk) + this.options.rowDelimiter;\n    } else {\n      chunk = this.stringify(chunk);\n\n      if (this.options.header || this.countWriten) {\n        chunk = this.options.rowDelimiter + chunk;\n      }\n    }\n  }\n\n  if (typeof chunk === 'number') {\n    chunk = \"\" + chunk;\n  }\n\n  if (this.countWriten === 0) {\n    this.headers();\n  }\n\n  if (!preserve) {\n    this.countWriten++;\n  }\n\n  return stream.Transform.prototype.write.call(this, chunk, encoding, callback);\n};\n\nStringifier.prototype._transform = function (chunk, encoding, callback) {\n  this.push(chunk);\n  return callback();\n};\n\nStringifier.prototype.stringify = function (line) {\n  var _line, column, columns, containsEscape, containsLinebreak, containsQuote, containsdelimiter, delimiter, escape, field, i, j, l, newLine, quote, ref, ref1, regexp, shouldQuote, value;\n\n  if (typeof line !== 'object') {\n    return line;\n  }\n\n  columns = this.options.columns;\n\n  if (typeof columns === 'object' && columns !== null && !Array.isArray(columns)) {\n    columns = Object.keys(columns);\n  }\n\n  delimiter = this.options.delimiter;\n  quote = this.options.quote;\n  escape = this.options.escape;\n\n  if (!Array.isArray(line)) {\n    _line = [];\n\n    if (columns) {\n      for (i = j = 0, ref = columns.length; 0 <= ref ? j < ref : j > ref; i = 0 <= ref ? ++j : --j) {\n        column = columns[i];\n        value = get(line, column);\n        _line[i] = typeof value === 'undefined' || value === null ? '' : value;\n      }\n    } else {\n      for (column in line) {\n        _line.push(line[column]);\n      }\n    }\n\n    line = _line;\n    _line = null;\n  } else if (columns) {\n    line.splice(columns.length);\n  }\n\n  if (Array.isArray(line)) {\n    newLine = '';\n\n    for (i = l = 0, ref1 = line.length; 0 <= ref1 ? l < ref1 : l > ref1; i = 0 <= ref1 ? ++l : --l) {\n      field = line[i];\n\n      if (typeof field === 'string') {} else if (typeof field === 'number') {\n        field = '' + field;\n      } else if (typeof field === 'boolean') {\n        field = this.options.formatters.bool(field);\n      } else if (field instanceof Date) {\n        field = this.options.formatters.date(field);\n      } else if (typeof field === 'object' && field !== null) {\n        field = this.options.formatters.object(field);\n      }\n\n      if (field) {\n        containsdelimiter = field.indexOf(delimiter) >= 0;\n        containsQuote = field.indexOf(quote) >= 0;\n        containsEscape = field.indexOf(escape) >= 0 && escape !== quote;\n        containsLinebreak = field.indexOf('\\r') >= 0 || field.indexOf('\\n') >= 0;\n        shouldQuote = containsQuote || containsdelimiter || containsLinebreak || this.options.quoted || this.options.quotedString && typeof line[i] === 'string';\n\n        if (shouldQuote && containsEscape) {\n          regexp = escape === '\\\\' ? new RegExp(escape + escape, 'g') : new RegExp(escape, 'g');\n          field = field.replace(regexp, escape + escape);\n        }\n\n        if (containsQuote) {\n          regexp = new RegExp(quote, 'g');\n          field = field.replace(regexp, escape + quote);\n        }\n\n        if (shouldQuote) {\n          field = quote + field + quote;\n        }\n\n        newLine += field;\n      } else if (this.options.quotedEmpty || this.options.quotedEmpty == null && line[i] === '' && this.options.quotedString) {\n        newLine += quote + quote;\n      }\n\n      if (i !== line.length - 1) {\n        newLine += delimiter;\n      }\n    }\n\n    line = newLine;\n  }\n\n  return line;\n};","map":{"version":3,"sources":["/Users/gcarminati/Desktop/OmniStudio/OmniProxy/react-express-proxy-sample/node_modules/csv-stringify/lib/index.js"],"names":["Stringifier","get","stream","util","require","module","exports","callback","chunks","data","options","stringifier","arguments","length","Array","isArray","process","nextTick","d","j","len","write","end","on","chunk","results","read","push","err","join","opts","base","base1","base10","base11","base12","base13","base2","base3","base4","base5","base6","base7","base8","base9","k","v","Transform","call","delimiter","quote","quoted","quotedEmpty","quotedString","eof","escape","columns","header","formatters","date","value","getTime","bool","object","JSON","stringify","rowDelimiter","countWriten","inherits","prototype","headers","label","labels","encoding","apply","e","preserve","Object","keys","emit","error","_transform","line","_line","column","containsEscape","containsLinebreak","containsQuote","containsdelimiter","field","i","l","newLine","ref","ref1","regexp","shouldQuote","splice","Date","indexOf","RegExp","replace"],"mappings":"AAAA;AACA,IAAIA,WAAJ,EAAiBC,GAAjB,EAAsBC,MAAtB,EAA8BC,IAA9B;AAEAD,MAAM,GAAGE,OAAO,CAAC,QAAD,CAAhB;AAEAD,IAAI,GAAGC,OAAO,CAAC,MAAD,CAAd;AAEAH,GAAG,GAAGG,OAAO,CAAC,YAAD,CAAb;;AAEAC,MAAM,CAACC,OAAP,GAAiB,YAAW;AAC1B,MAAIC,QAAJ,EAAcC,MAAd,EAAsBC,IAAtB,EAA4BC,OAA5B,EAAqCC,WAArC;;AACA,MAAIC,SAAS,CAACC,MAAV,KAAqB,CAAzB,EAA4B;AAC1BJ,IAAAA,IAAI,GAAGG,SAAS,CAAC,CAAD,CAAhB;AACAF,IAAAA,OAAO,GAAGE,SAAS,CAAC,CAAD,CAAnB;AACAL,IAAAA,QAAQ,GAAGK,SAAS,CAAC,CAAD,CAApB;AACD,GAJD,MAIO,IAAIA,SAAS,CAACC,MAAV,KAAqB,CAAzB,EAA4B;AACjC,QAAIC,KAAK,CAACC,OAAN,CAAcH,SAAS,CAAC,CAAD,CAAvB,CAAJ,EAAiC;AAC/BH,MAAAA,IAAI,GAAGG,SAAS,CAAC,CAAD,CAAhB;AACD,KAFD,MAEO;AACLF,MAAAA,OAAO,GAAGE,SAAS,CAAC,CAAD,CAAnB;AACD;;AACD,QAAI,OAAOA,SAAS,CAAC,CAAD,CAAhB,KAAwB,UAA5B,EAAwC;AACtCL,MAAAA,QAAQ,GAAGK,SAAS,CAAC,CAAD,CAApB;AACD,KAFD,MAEO;AACLF,MAAAA,OAAO,GAAGE,SAAS,CAAC,CAAD,CAAnB;AACD;AACF,GAXM,MAWA,IAAIA,SAAS,CAACC,MAAV,KAAqB,CAAzB,EAA4B;AACjC,QAAI,OAAOD,SAAS,CAAC,CAAD,CAAhB,KAAwB,UAA5B,EAAwC;AACtCL,MAAAA,QAAQ,GAAGK,SAAS,CAAC,CAAD,CAApB;AACD,KAFD,MAEO,IAAIE,KAAK,CAACC,OAAN,CAAcH,SAAS,CAAC,CAAD,CAAvB,CAAJ,EAAiC;AACtCH,MAAAA,IAAI,GAAGG,SAAS,CAAC,CAAD,CAAhB;AACD,KAFM,MAEA;AACLF,MAAAA,OAAO,GAAGE,SAAS,CAAC,CAAD,CAAnB;AACD;AACF;;AACD,MAAIF,OAAO,IAAI,IAAf,EAAqB;AACnBA,IAAAA,OAAO,GAAG,EAAV;AACD;;AACDC,EAAAA,WAAW,GAAG,IAAIX,WAAJ,CAAgBU,OAAhB,CAAd;;AACA,MAAID,IAAJ,EAAU;AACRO,IAAAA,OAAO,CAACC,QAAR,CAAiB,YAAW;AAC1B,UAAIC,CAAJ,EAAOC,CAAP,EAAUC,GAAV;;AACA,WAAKD,CAAC,GAAG,CAAJ,EAAOC,GAAG,GAAGX,IAAI,CAACI,MAAvB,EAA+BM,CAAC,GAAGC,GAAnC,EAAwCD,CAAC,EAAzC,EAA6C;AAC3CD,QAAAA,CAAC,GAAGT,IAAI,CAACU,CAAD,CAAR;AACAR,QAAAA,WAAW,CAACU,KAAZ,CAAkBH,CAAlB;AACD;;AACD,aAAOP,WAAW,CAACW,GAAZ,EAAP;AACD,KAPD;AAQD;;AACD,MAAIf,QAAJ,EAAc;AACZC,IAAAA,MAAM,GAAG,EAAT;AACAG,IAAAA,WAAW,CAACY,EAAZ,CAAe,UAAf,EAA2B,YAAW;AACpC,UAAIC,KAAJ,EAAWC,OAAX;AACAA,MAAAA,OAAO,GAAG,EAAV;;AACA,aAAOD,KAAK,GAAGb,WAAW,CAACe,IAAZ,EAAf,EAAmC;AACjCD,QAAAA,OAAO,CAACE,IAAR,CAAanB,MAAM,CAACmB,IAAP,CAAYH,KAAZ,CAAb;AACD;;AACD,aAAOC,OAAP;AACD,KAPD;AAQAd,IAAAA,WAAW,CAACY,EAAZ,CAAe,OAAf,EAAwB,UAASK,GAAT,EAAc;AACpC,aAAOrB,QAAQ,CAACqB,GAAD,CAAf;AACD,KAFD;AAGAjB,IAAAA,WAAW,CAACY,EAAZ,CAAe,KAAf,EAAsB,YAAW;AAC/B,aAAOhB,QAAQ,CAAC,IAAD,EAAOC,MAAM,CAACqB,IAAP,CAAY,EAAZ,CAAP,CAAf;AACD,KAFD;AAGD;;AACD,SAAOlB,WAAP;AACD,CA1DD;;AA4DAX,WAAW,GAAG,UAAS8B,IAAT,EAAe;AAC3B,MAAIC,IAAJ,EAAUC,KAAV,EAAiBC,MAAjB,EAAyBC,MAAzB,EAAiCC,MAAjC,EAAyCC,MAAzC,EAAiDC,KAAjD,EAAwDC,KAAxD,EAA+DC,KAA/D,EAAsEC,KAAtE,EAA6EC,KAA7E,EAAoFC,KAApF,EAA2FC,KAA3F,EAAkGC,KAAlG,EAAyGC,CAAzG,EAA4GnC,OAA5G,EAAqHoC,CAArH;;AACA,MAAIhB,IAAI,IAAI,IAAZ,EAAkB;AAChBA,IAAAA,IAAI,GAAG,EAAP;AACD;;AACDpB,EAAAA,OAAO,GAAG,EAAV;;AACA,OAAKmC,CAAL,IAAUf,IAAV,EAAgB;AACdgB,IAAAA,CAAC,GAAGhB,IAAI,CAACe,CAAD,CAAR;AACAnC,IAAAA,OAAO,CAACmC,CAAD,CAAP,GAAaC,CAAb;AACD;;AACD5C,EAAAA,MAAM,CAAC6C,SAAP,CAAiBC,IAAjB,CAAsB,IAAtB,EAA4BtC,OAA5B;AACA,OAAKA,OAAL,GAAeA,OAAf;;AACA,MAAI,CAACqB,IAAI,GAAG,KAAKrB,OAAb,EAAsBuC,SAAtB,IAAmC,IAAvC,EAA6C;AAC3ClB,IAAAA,IAAI,CAACkB,SAAL,GAAiB,GAAjB;AACD;;AACD,MAAI,CAACjB,KAAK,GAAG,KAAKtB,OAAd,EAAuBwC,KAAvB,IAAgC,IAApC,EAA0C;AACxClB,IAAAA,KAAK,CAACkB,KAAN,GAAc,GAAd;AACD;;AACD,MAAI,CAACb,KAAK,GAAG,KAAK3B,OAAd,EAAuByC,MAAvB,IAAiC,IAArC,EAA2C;AACzCd,IAAAA,KAAK,CAACc,MAAN,GAAe,KAAf;AACD;;AACD,MAAI,CAACb,KAAK,GAAG,KAAK5B,OAAd,EAAuB0C,WAAvB,IAAsC,IAA1C,EAAgD;AAC9Cd,IAAAA,KAAK,CAACc,WAAN,GAAoB,KAAK,CAAzB;AACD;;AACD,MAAI,CAACb,KAAK,GAAG,KAAK7B,OAAd,EAAuB2C,YAAvB,IAAuC,IAA3C,EAAiD;AAC/Cd,IAAAA,KAAK,CAACc,YAAN,GAAqB,KAArB;AACD;;AACD,MAAI,CAACb,KAAK,GAAG,KAAK9B,OAAd,EAAuB4C,GAAvB,IAA8B,IAAlC,EAAwC;AACtCd,IAAAA,KAAK,CAACc,GAAN,GAAY,IAAZ;AACD;;AACD,MAAI,CAACb,KAAK,GAAG,KAAK/B,OAAd,EAAuB6C,MAAvB,IAAiC,IAArC,EAA2C;AACzCd,IAAAA,KAAK,CAACc,MAAN,GAAe,GAAf;AACD;;AACD,MAAI,CAACb,KAAK,GAAG,KAAKhC,OAAd,EAAuB8C,OAAvB,IAAkC,IAAtC,EAA4C;AAC1Cd,IAAAA,KAAK,CAACc,OAAN,GAAgB,IAAhB;AACD;;AACD,MAAI,CAACb,KAAK,GAAG,KAAKjC,OAAd,EAAuB+C,MAAvB,IAAiC,IAArC,EAA2C;AACzCd,IAAAA,KAAK,CAACc,MAAN,GAAe,KAAf;AACD;;AACD,MAAI,CAACb,KAAK,GAAG,KAAKlC,OAAd,EAAuBgD,UAAvB,IAAqC,IAAzC,EAA+C;AAC7Cd,IAAAA,KAAK,CAACc,UAAN,GAAmB,EAAnB;AACD;;AACD,MAAI,CAACzB,MAAM,GAAG,KAAKvB,OAAL,CAAagD,UAAvB,EAAmCC,IAAnC,IAA2C,IAA/C,EAAqD;AACnD1B,IAAAA,MAAM,CAAC0B,IAAP,GAAc,UAASC,KAAT,EAAgB;AAC5B,aAAO,KAAKA,KAAK,CAACC,OAAN,EAAZ;AACD,KAFD;AAGD;;AACD,MAAI,CAAC3B,MAAM,GAAG,KAAKxB,OAAL,CAAagD,UAAvB,EAAmCI,IAAnC,IAA2C,IAA/C,EAAqD;AACnD5B,IAAAA,MAAM,CAAC4B,IAAP,GAAc,UAASF,KAAT,EAAgB;AAC5B,UAAIA,KAAJ,EAAW;AACT,eAAO,GAAP;AACD,OAFD,MAEO;AACL,eAAO,EAAP;AACD;AACF,KAND;AAOD;;AACD,MAAI,CAACzB,MAAM,GAAG,KAAKzB,OAAL,CAAagD,UAAvB,EAAmCK,MAAnC,IAA6C,IAAjD,EAAuD;AACrD5B,IAAAA,MAAM,CAAC4B,MAAP,GAAgB,UAASH,KAAT,EAAgB;AAC9B,aAAOI,IAAI,CAACC,SAAL,CAAeL,KAAf,CAAP;AACD,KAFD;AAGD;;AACD,MAAI,CAACxB,MAAM,GAAG,KAAK1B,OAAf,EAAwBwD,YAAxB,IAAwC,IAA5C,EAAkD;AAChD9B,IAAAA,MAAM,CAAC8B,YAAP,GAAsB,IAAtB;AACD;;AACD,MAAI,KAAKC,WAAL,IAAoB,IAAxB,EAA8B;AAC5B,SAAKA,WAAL,GAAmB,CAAnB;AACD;;AACD,UAAQ,KAAKzD,OAAL,CAAawD,YAArB;AACE,SAAK,MAAL;AACE,WAAKxD,OAAL,CAAawD,YAAb,GAA4B,IAA5B;AACA;;AACF,SAAK,MAAL;AACE,WAAKxD,OAAL,CAAawD,YAAb,GAA4B,IAA5B;AACA;;AACF,SAAK,KAAL;AACE,WAAKxD,OAAL,CAAawD,YAAb,GAA4B,IAA5B;AACA;;AACF,SAAK,SAAL;AACE,WAAKxD,OAAL,CAAawD,YAAb,GAA4B,MAA5B;AACA;;AACF,SAAK,SAAL;AACE,WAAKxD,OAAL,CAAawD,YAAb,GAA4B,QAA5B;AAdJ;;AAgBA,SAAO,IAAP;AACD,CApFD;;AAsFA/D,IAAI,CAACiE,QAAL,CAAcpE,WAAd,EAA2BE,MAAM,CAAC6C,SAAlC;AAEA1C,MAAM,CAACC,OAAP,CAAeN,WAAf,GAA6BA,WAA7B;;AAEAA,WAAW,CAACqE,SAAZ,CAAsBC,OAAtB,GAAgC,YAAW;AACzC,MAAIzB,CAAJ,EAAO0B,KAAP,EAAcC,MAAd;;AACA,MAAI,CAAC,KAAK9D,OAAL,CAAa+C,MAAlB,EAA0B;AACxB;AACD;;AACD,MAAI,CAAC,KAAK/C,OAAL,CAAa8C,OAAlB,EAA2B;AACzB;AACD;;AACDgB,EAAAA,MAAM,GAAG,KAAK9D,OAAL,CAAa8C,OAAtB;;AACA,MAAI,OAAOgB,MAAP,KAAkB,QAAtB,EAAgC;AAC9BA,IAAAA,MAAM,GAAI,YAAW;AACnB,UAAI/C,OAAJ;AACAA,MAAAA,OAAO,GAAG,EAAV;;AACA,WAAKoB,CAAL,IAAU2B,MAAV,EAAkB;AAChBD,QAAAA,KAAK,GAAGC,MAAM,CAAC3B,CAAD,CAAd;AACApB,QAAAA,OAAO,CAACE,IAAR,CAAa4C,KAAb;AACD;;AACD,aAAO9C,OAAP;AACD,KARQ,EAAT;AASD;;AACD,MAAI,KAAKf,OAAL,CAAa4C,GAAjB,EAAsB;AACpBkB,IAAAA,MAAM,GAAG,KAAKP,SAAL,CAAeO,MAAf,IAAyB,KAAK9D,OAAL,CAAawD,YAA/C;AACD,GAFD,MAEO;AACLM,IAAAA,MAAM,GAAG,KAAKP,SAAL,CAAeO,MAAf,CAAT;AACD;;AACD,SAAOtE,MAAM,CAAC6C,SAAP,CAAiBsB,SAAjB,CAA2BhD,KAA3B,CAAiC2B,IAAjC,CAAsC,IAAtC,EAA4CwB,MAA5C,CAAP;AACD,CA1BD;;AA4BAxE,WAAW,CAACqE,SAAZ,CAAsB/C,GAAtB,GAA4B,UAASE,KAAT,EAAgBiD,QAAhB,EAA0BlE,QAA1B,EAAoC;AAC9D,MAAI,KAAK4D,WAAL,KAAqB,CAAzB,EAA4B;AAC1B,SAAKG,OAAL;AACD;;AACD,SAAOpE,MAAM,CAAC6C,SAAP,CAAiBsB,SAAjB,CAA2B/C,GAA3B,CAA+BoD,KAA/B,CAAqC,IAArC,EAA2C9D,SAA3C,CAAP;AACD,CALD;;AAOAZ,WAAW,CAACqE,SAAZ,CAAsBhD,KAAtB,GAA8B,UAASG,KAAT,EAAgBiD,QAAhB,EAA0BlE,QAA1B,EAAoC;AAChE,MAAIwB,IAAJ,EAAU4C,CAAV,EAAaC,QAAb;;AACA,MAAIpD,KAAK,IAAI,IAAb,EAAmB;AACjB;AACD;;AACDoD,EAAAA,QAAQ,GAAG,OAAOpD,KAAP,KAAiB,QAA5B;;AACA,MAAI,CAACoD,QAAL,EAAe;AACb,QAAI,KAAKT,WAAL,KAAqB,CAArB,IAA0B,CAACrD,KAAK,CAACC,OAAN,CAAcS,KAAd,CAA/B,EAAqD;AACnD,UAAI,CAACO,IAAI,GAAG,KAAKrB,OAAb,EAAsB8C,OAAtB,IAAiC,IAArC,EAA2C;AACzCzB,QAAAA,IAAI,CAACyB,OAAL,GAAeqB,MAAM,CAACC,IAAP,CAAYtD,KAAZ,CAAf;AACD;AACF;;AACD,QAAI;AACF,WAAKuD,IAAL,CAAU,QAAV,EAAoBvD,KAApB,EAA2B,KAAK2C,WAAhC;AACD,KAFD,CAEE,OAAOa,KAAP,EAAc;AACdL,MAAAA,CAAC,GAAGK,KAAJ;AACA,aAAO,KAAKD,IAAL,CAAU,OAAV,EAAmBJ,CAAnB,CAAP;AACD;;AACD,QAAI,KAAKjE,OAAL,CAAa4C,GAAjB,EAAsB;AACpB9B,MAAAA,KAAK,GAAG,KAAKyC,SAAL,CAAezC,KAAf,IAAwB,KAAKd,OAAL,CAAawD,YAA7C;AACD,KAFD,MAEO;AACL1C,MAAAA,KAAK,GAAG,KAAKyC,SAAL,CAAezC,KAAf,CAAR;;AACA,UAAI,KAAKd,OAAL,CAAa+C,MAAb,IAAuB,KAAKU,WAAhC,EAA6C;AAC3C3C,QAAAA,KAAK,GAAG,KAAKd,OAAL,CAAawD,YAAb,GAA4B1C,KAApC;AACD;AACF;AACF;;AACD,MAAI,OAAOA,KAAP,KAAiB,QAArB,EAA+B;AAC7BA,IAAAA,KAAK,GAAG,KAAKA,KAAb;AACD;;AACD,MAAI,KAAK2C,WAAL,KAAqB,CAAzB,EAA4B;AAC1B,SAAKG,OAAL;AACD;;AACD,MAAI,CAACM,QAAL,EAAe;AACb,SAAKT,WAAL;AACD;;AACD,SAAOjE,MAAM,CAAC6C,SAAP,CAAiBsB,SAAjB,CAA2BhD,KAA3B,CAAiC2B,IAAjC,CAAsC,IAAtC,EAA4CxB,KAA5C,EAAmDiD,QAAnD,EAA6DlE,QAA7D,CAAP;AACD,CArCD;;AAuCAP,WAAW,CAACqE,SAAZ,CAAsBY,UAAtB,GAAmC,UAASzD,KAAT,EAAgBiD,QAAhB,EAA0BlE,QAA1B,EAAoC;AACrE,OAAKoB,IAAL,CAAUH,KAAV;AACA,SAAOjB,QAAQ,EAAf;AACD,CAHD;;AAKAP,WAAW,CAACqE,SAAZ,CAAsBJ,SAAtB,GAAkC,UAASiB,IAAT,EAAe;AAC/C,MAAIC,KAAJ,EAAWC,MAAX,EAAmB5B,OAAnB,EAA4B6B,cAA5B,EAA4CC,iBAA5C,EAA+DC,aAA/D,EAA8EC,iBAA9E,EAAiGvC,SAAjG,EAA4GM,MAA5G,EAAoHkC,KAApH,EAA2HC,CAA3H,EAA8HvE,CAA9H,EAAiIwE,CAAjI,EAAoIC,OAApI,EAA6I1C,KAA7I,EAAoJ2C,GAApJ,EAAyJC,IAAzJ,EAA+JC,MAA/J,EAAuKC,WAAvK,EAAoLpC,KAApL;;AACA,MAAI,OAAOsB,IAAP,KAAgB,QAApB,EAA8B;AAC5B,WAAOA,IAAP;AACD;;AACD1B,EAAAA,OAAO,GAAG,KAAK9C,OAAL,CAAa8C,OAAvB;;AACA,MAAI,OAAOA,OAAP,KAAmB,QAAnB,IAA+BA,OAAO,KAAK,IAA3C,IAAmD,CAAC1C,KAAK,CAACC,OAAN,CAAcyC,OAAd,CAAxD,EAAgF;AAC9EA,IAAAA,OAAO,GAAGqB,MAAM,CAACC,IAAP,CAAYtB,OAAZ,CAAV;AACD;;AACDP,EAAAA,SAAS,GAAG,KAAKvC,OAAL,CAAauC,SAAzB;AACAC,EAAAA,KAAK,GAAG,KAAKxC,OAAL,CAAawC,KAArB;AACAK,EAAAA,MAAM,GAAG,KAAK7C,OAAL,CAAa6C,MAAtB;;AACA,MAAI,CAACzC,KAAK,CAACC,OAAN,CAAcmE,IAAd,CAAL,EAA0B;AACxBC,IAAAA,KAAK,GAAG,EAAR;;AACA,QAAI3B,OAAJ,EAAa;AACX,WAAKkC,CAAC,GAAGvE,CAAC,GAAG,CAAR,EAAW0E,GAAG,GAAGrC,OAAO,CAAC3C,MAA9B,EAAsC,KAAKgF,GAAL,GAAW1E,CAAC,GAAG0E,GAAf,GAAqB1E,CAAC,GAAG0E,GAA/D,EAAoEH,CAAC,GAAG,KAAKG,GAAL,GAAW,EAAE1E,CAAb,GAAiB,EAAEA,CAA3F,EAA8F;AAC5FiE,QAAAA,MAAM,GAAG5B,OAAO,CAACkC,CAAD,CAAhB;AACA9B,QAAAA,KAAK,GAAG3D,GAAG,CAACiF,IAAD,EAAOE,MAAP,CAAX;AACAD,QAAAA,KAAK,CAACO,CAAD,CAAL,GAAY,OAAO9B,KAAP,KAAiB,WAAjB,IAAgCA,KAAK,KAAK,IAA3C,GAAmD,EAAnD,GAAwDA,KAAnE;AACD;AACF,KAND,MAMO;AACL,WAAKwB,MAAL,IAAeF,IAAf,EAAqB;AACnBC,QAAAA,KAAK,CAACxD,IAAN,CAAWuD,IAAI,CAACE,MAAD,CAAf;AACD;AACF;;AACDF,IAAAA,IAAI,GAAGC,KAAP;AACAA,IAAAA,KAAK,GAAG,IAAR;AACD,GAfD,MAeO,IAAI3B,OAAJ,EAAa;AAClB0B,IAAAA,IAAI,CAACe,MAAL,CAAYzC,OAAO,CAAC3C,MAApB;AACD;;AACD,MAAIC,KAAK,CAACC,OAAN,CAAcmE,IAAd,CAAJ,EAAyB;AACvBU,IAAAA,OAAO,GAAG,EAAV;;AACA,SAAKF,CAAC,GAAGC,CAAC,GAAG,CAAR,EAAWG,IAAI,GAAGZ,IAAI,CAACrE,MAA5B,EAAoC,KAAKiF,IAAL,GAAYH,CAAC,GAAGG,IAAhB,GAAuBH,CAAC,GAAGG,IAA/D,EAAqEJ,CAAC,GAAG,KAAKI,IAAL,GAAY,EAAEH,CAAd,GAAkB,EAAEA,CAA7F,EAAgG;AAC9FF,MAAAA,KAAK,GAAGP,IAAI,CAACQ,CAAD,CAAZ;;AACA,UAAI,OAAOD,KAAP,KAAiB,QAArB,EAA+B,CAE9B,CAFD,MAEO,IAAI,OAAOA,KAAP,KAAiB,QAArB,EAA+B;AACpCA,QAAAA,KAAK,GAAG,KAAKA,KAAb;AACD,OAFM,MAEA,IAAI,OAAOA,KAAP,KAAiB,SAArB,EAAgC;AACrCA,QAAAA,KAAK,GAAG,KAAK/E,OAAL,CAAagD,UAAb,CAAwBI,IAAxB,CAA6B2B,KAA7B,CAAR;AACD,OAFM,MAEA,IAAIA,KAAK,YAAYS,IAArB,EAA2B;AAChCT,QAAAA,KAAK,GAAG,KAAK/E,OAAL,CAAagD,UAAb,CAAwBC,IAAxB,CAA6B8B,KAA7B,CAAR;AACD,OAFM,MAEA,IAAI,OAAOA,KAAP,KAAiB,QAAjB,IAA6BA,KAAK,KAAK,IAA3C,EAAiD;AACtDA,QAAAA,KAAK,GAAG,KAAK/E,OAAL,CAAagD,UAAb,CAAwBK,MAAxB,CAA+B0B,KAA/B,CAAR;AACD;;AACD,UAAIA,KAAJ,EAAW;AACTD,QAAAA,iBAAiB,GAAGC,KAAK,CAACU,OAAN,CAAclD,SAAd,KAA4B,CAAhD;AACAsC,QAAAA,aAAa,GAAGE,KAAK,CAACU,OAAN,CAAcjD,KAAd,KAAwB,CAAxC;AACAmC,QAAAA,cAAc,GAAGI,KAAK,CAACU,OAAN,CAAc5C,MAAd,KAAyB,CAAzB,IAA+BA,MAAM,KAAKL,KAA3D;AACAoC,QAAAA,iBAAiB,GAAGG,KAAK,CAACU,OAAN,CAAc,IAAd,KAAuB,CAAvB,IAA4BV,KAAK,CAACU,OAAN,CAAc,IAAd,KAAuB,CAAvE;AACAH,QAAAA,WAAW,GAAGT,aAAa,IAAIC,iBAAjB,IAAsCF,iBAAtC,IAA2D,KAAK5E,OAAL,CAAayC,MAAxE,IAAmF,KAAKzC,OAAL,CAAa2C,YAAb,IAA6B,OAAO6B,IAAI,CAACQ,CAAD,CAAX,KAAmB,QAAjJ;;AACA,YAAIM,WAAW,IAAIX,cAAnB,EAAmC;AACjCU,UAAAA,MAAM,GAAGxC,MAAM,KAAK,IAAX,GAAkB,IAAI6C,MAAJ,CAAW7C,MAAM,GAAGA,MAApB,EAA4B,GAA5B,CAAlB,GAAqD,IAAI6C,MAAJ,CAAW7C,MAAX,EAAmB,GAAnB,CAA9D;AACAkC,UAAAA,KAAK,GAAGA,KAAK,CAACY,OAAN,CAAcN,MAAd,EAAsBxC,MAAM,GAAGA,MAA/B,CAAR;AACD;;AACD,YAAIgC,aAAJ,EAAmB;AACjBQ,UAAAA,MAAM,GAAG,IAAIK,MAAJ,CAAWlD,KAAX,EAAkB,GAAlB,CAAT;AACAuC,UAAAA,KAAK,GAAGA,KAAK,CAACY,OAAN,CAAcN,MAAd,EAAsBxC,MAAM,GAAGL,KAA/B,CAAR;AACD;;AACD,YAAI8C,WAAJ,EAAiB;AACfP,UAAAA,KAAK,GAAGvC,KAAK,GAAGuC,KAAR,GAAgBvC,KAAxB;AACD;;AACD0C,QAAAA,OAAO,IAAIH,KAAX;AACD,OAlBD,MAkBO,IAAI,KAAK/E,OAAL,CAAa0C,WAAb,IAA8B,KAAK1C,OAAL,CAAa0C,WAAb,IAA4B,IAA7B,IAAsC8B,IAAI,CAACQ,CAAD,CAAJ,KAAY,EAAlD,IAAwD,KAAKhF,OAAL,CAAa2C,YAAtG,EAAqH;AAC1HuC,QAAAA,OAAO,IAAI1C,KAAK,GAAGA,KAAnB;AACD;;AACD,UAAIwC,CAAC,KAAKR,IAAI,CAACrE,MAAL,GAAc,CAAxB,EAA2B;AACzB+E,QAAAA,OAAO,IAAI3C,SAAX;AACD;AACF;;AACDiC,IAAAA,IAAI,GAAGU,OAAP;AACD;;AACD,SAAOV,IAAP;AACD,CAzED","sourcesContent":["// Generated by CoffeeScript 1.12.7\nvar Stringifier, get, stream, util;\n\nstream = require('stream');\n\nutil = require('util');\n\nget = require('lodash.get');\n\nmodule.exports = function() {\n  var callback, chunks, data, options, stringifier;\n  if (arguments.length === 3) {\n    data = arguments[0];\n    options = arguments[1];\n    callback = arguments[2];\n  } else if (arguments.length === 2) {\n    if (Array.isArray(arguments[0])) {\n      data = arguments[0];\n    } else {\n      options = arguments[0];\n    }\n    if (typeof arguments[1] === 'function') {\n      callback = arguments[1];\n    } else {\n      options = arguments[1];\n    }\n  } else if (arguments.length === 1) {\n    if (typeof arguments[0] === 'function') {\n      callback = arguments[0];\n    } else if (Array.isArray(arguments[0])) {\n      data = arguments[0];\n    } else {\n      options = arguments[0];\n    }\n  }\n  if (options == null) {\n    options = {};\n  }\n  stringifier = new Stringifier(options);\n  if (data) {\n    process.nextTick(function() {\n      var d, j, len;\n      for (j = 0, len = data.length; j < len; j++) {\n        d = data[j];\n        stringifier.write(d);\n      }\n      return stringifier.end();\n    });\n  }\n  if (callback) {\n    chunks = [];\n    stringifier.on('readable', function() {\n      var chunk, results;\n      results = [];\n      while (chunk = stringifier.read()) {\n        results.push(chunks.push(chunk));\n      }\n      return results;\n    });\n    stringifier.on('error', function(err) {\n      return callback(err);\n    });\n    stringifier.on('end', function() {\n      return callback(null, chunks.join(''));\n    });\n  }\n  return stringifier;\n};\n\nStringifier = function(opts) {\n  var base, base1, base10, base11, base12, base13, base2, base3, base4, base5, base6, base7, base8, base9, k, options, v;\n  if (opts == null) {\n    opts = {};\n  }\n  options = {};\n  for (k in opts) {\n    v = opts[k];\n    options[k] = v;\n  }\n  stream.Transform.call(this, options);\n  this.options = options;\n  if ((base = this.options).delimiter == null) {\n    base.delimiter = ',';\n  }\n  if ((base1 = this.options).quote == null) {\n    base1.quote = '\"';\n  }\n  if ((base2 = this.options).quoted == null) {\n    base2.quoted = false;\n  }\n  if ((base3 = this.options).quotedEmpty == null) {\n    base3.quotedEmpty = void 0;\n  }\n  if ((base4 = this.options).quotedString == null) {\n    base4.quotedString = false;\n  }\n  if ((base5 = this.options).eof == null) {\n    base5.eof = true;\n  }\n  if ((base6 = this.options).escape == null) {\n    base6.escape = '\"';\n  }\n  if ((base7 = this.options).columns == null) {\n    base7.columns = null;\n  }\n  if ((base8 = this.options).header == null) {\n    base8.header = false;\n  }\n  if ((base9 = this.options).formatters == null) {\n    base9.formatters = {};\n  }\n  if ((base10 = this.options.formatters).date == null) {\n    base10.date = function(value) {\n      return '' + value.getTime();\n    };\n  }\n  if ((base11 = this.options.formatters).bool == null) {\n    base11.bool = function(value) {\n      if (value) {\n        return '1';\n      } else {\n        return '';\n      }\n    };\n  }\n  if ((base12 = this.options.formatters).object == null) {\n    base12.object = function(value) {\n      return JSON.stringify(value);\n    };\n  }\n  if ((base13 = this.options).rowDelimiter == null) {\n    base13.rowDelimiter = '\\n';\n  }\n  if (this.countWriten == null) {\n    this.countWriten = 0;\n  }\n  switch (this.options.rowDelimiter) {\n    case 'auto':\n      this.options.rowDelimiter = null;\n      break;\n    case 'unix':\n      this.options.rowDelimiter = \"\\n\";\n      break;\n    case 'mac':\n      this.options.rowDelimiter = \"\\r\";\n      break;\n    case 'windows':\n      this.options.rowDelimiter = \"\\r\\n\";\n      break;\n    case 'unicode':\n      this.options.rowDelimiter = \"\\u2028\";\n  }\n  return this;\n};\n\nutil.inherits(Stringifier, stream.Transform);\n\nmodule.exports.Stringifier = Stringifier;\n\nStringifier.prototype.headers = function() {\n  var k, label, labels;\n  if (!this.options.header) {\n    return;\n  }\n  if (!this.options.columns) {\n    return;\n  }\n  labels = this.options.columns;\n  if (typeof labels === 'object') {\n    labels = (function() {\n      var results;\n      results = [];\n      for (k in labels) {\n        label = labels[k];\n        results.push(label);\n      }\n      return results;\n    })();\n  }\n  if (this.options.eof) {\n    labels = this.stringify(labels) + this.options.rowDelimiter;\n  } else {\n    labels = this.stringify(labels);\n  }\n  return stream.Transform.prototype.write.call(this, labels);\n};\n\nStringifier.prototype.end = function(chunk, encoding, callback) {\n  if (this.countWriten === 0) {\n    this.headers();\n  }\n  return stream.Transform.prototype.end.apply(this, arguments);\n};\n\nStringifier.prototype.write = function(chunk, encoding, callback) {\n  var base, e, preserve;\n  if (chunk == null) {\n    return;\n  }\n  preserve = typeof chunk !== 'object';\n  if (!preserve) {\n    if (this.countWriten === 0 && !Array.isArray(chunk)) {\n      if ((base = this.options).columns == null) {\n        base.columns = Object.keys(chunk);\n      }\n    }\n    try {\n      this.emit('record', chunk, this.countWriten);\n    } catch (error) {\n      e = error;\n      return this.emit('error', e);\n    }\n    if (this.options.eof) {\n      chunk = this.stringify(chunk) + this.options.rowDelimiter;\n    } else {\n      chunk = this.stringify(chunk);\n      if (this.options.header || this.countWriten) {\n        chunk = this.options.rowDelimiter + chunk;\n      }\n    }\n  }\n  if (typeof chunk === 'number') {\n    chunk = \"\" + chunk;\n  }\n  if (this.countWriten === 0) {\n    this.headers();\n  }\n  if (!preserve) {\n    this.countWriten++;\n  }\n  return stream.Transform.prototype.write.call(this, chunk, encoding, callback);\n};\n\nStringifier.prototype._transform = function(chunk, encoding, callback) {\n  this.push(chunk);\n  return callback();\n};\n\nStringifier.prototype.stringify = function(line) {\n  var _line, column, columns, containsEscape, containsLinebreak, containsQuote, containsdelimiter, delimiter, escape, field, i, j, l, newLine, quote, ref, ref1, regexp, shouldQuote, value;\n  if (typeof line !== 'object') {\n    return line;\n  }\n  columns = this.options.columns;\n  if (typeof columns === 'object' && columns !== null && !Array.isArray(columns)) {\n    columns = Object.keys(columns);\n  }\n  delimiter = this.options.delimiter;\n  quote = this.options.quote;\n  escape = this.options.escape;\n  if (!Array.isArray(line)) {\n    _line = [];\n    if (columns) {\n      for (i = j = 0, ref = columns.length; 0 <= ref ? j < ref : j > ref; i = 0 <= ref ? ++j : --j) {\n        column = columns[i];\n        value = get(line, column);\n        _line[i] = (typeof value === 'undefined' || value === null) ? '' : value;\n      }\n    } else {\n      for (column in line) {\n        _line.push(line[column]);\n      }\n    }\n    line = _line;\n    _line = null;\n  } else if (columns) {\n    line.splice(columns.length);\n  }\n  if (Array.isArray(line)) {\n    newLine = '';\n    for (i = l = 0, ref1 = line.length; 0 <= ref1 ? l < ref1 : l > ref1; i = 0 <= ref1 ? ++l : --l) {\n      field = line[i];\n      if (typeof field === 'string') {\n\n      } else if (typeof field === 'number') {\n        field = '' + field;\n      } else if (typeof field === 'boolean') {\n        field = this.options.formatters.bool(field);\n      } else if (field instanceof Date) {\n        field = this.options.formatters.date(field);\n      } else if (typeof field === 'object' && field !== null) {\n        field = this.options.formatters.object(field);\n      }\n      if (field) {\n        containsdelimiter = field.indexOf(delimiter) >= 0;\n        containsQuote = field.indexOf(quote) >= 0;\n        containsEscape = field.indexOf(escape) >= 0 && (escape !== quote);\n        containsLinebreak = field.indexOf('\\r') >= 0 || field.indexOf('\\n') >= 0;\n        shouldQuote = containsQuote || containsdelimiter || containsLinebreak || this.options.quoted || (this.options.quotedString && typeof line[i] === 'string');\n        if (shouldQuote && containsEscape) {\n          regexp = escape === '\\\\' ? new RegExp(escape + escape, 'g') : new RegExp(escape, 'g');\n          field = field.replace(regexp, escape + escape);\n        }\n        if (containsQuote) {\n          regexp = new RegExp(quote, 'g');\n          field = field.replace(regexp, escape + quote);\n        }\n        if (shouldQuote) {\n          field = quote + field + quote;\n        }\n        newLine += field;\n      } else if (this.options.quotedEmpty || ((this.options.quotedEmpty == null) && line[i] === '' && this.options.quotedString)) {\n        newLine += quote + quote;\n      }\n      if (i !== line.length - 1) {\n        newLine += delimiter;\n      }\n    }\n    line = newLine;\n  }\n  return line;\n};\n"]},"metadata":{},"sourceType":"script"}