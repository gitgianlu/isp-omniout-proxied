{"ast":null,"code":"/**\n * @file Create and build SOQL string from configuration\n * @author Shinichi Tomita <shinichi.tomita@gmail.com>\n */\n'use strict';\n\nvar _ = require('lodash/core'),\n    SfDate = require(\"./date\");\n/**\n * Create SOQL\n * @private\n */\n\n\nfunction createSOQL(query) {\n  var soql = [\"SELECT \", createFieldsClause(query.fields, query.includes), \" FROM \", query.table].join(\"\");\n  var cond = createConditionClause(query.conditions);\n\n  if (cond) {\n    soql += \" WHERE \" + cond;\n  }\n\n  var orderby = createOrderByClause(query.sort);\n\n  if (orderby) {\n    soql += \" ORDER BY \" + orderby;\n  }\n\n  if (query.limit) {\n    soql += \" LIMIT \" + query.limit;\n  }\n\n  if (query.offset) {\n    soql += \" OFFSET \" + query.offset;\n  }\n\n  return soql;\n}\n/** @private **/\n\n\nfunction createFieldsClause(fields, childQueries) {\n  childQueries = _.map(_.values(childQueries || {}), function (cquery) {\n    return '(' + createSOQL(cquery) + ')';\n  });\n  return (fields || [\"Id\"]).concat(childQueries).join(', ');\n}\n/** @private **/\n\n\nfunction createConditionClause(conditions, operator, depth) {\n  if (_.isString(conditions)) {\n    return conditions;\n  }\n\n  conditions = conditions || [];\n  operator = operator || \"AND\";\n  depth = depth || 0;\n\n  if (!isArray(conditions)) {\n    // if passed in hash object\n    conditions = _.keys(conditions).map(function (key) {\n      return {\n        key: key,\n        value: conditions[key]\n      };\n    });\n  } else {\n    conditions = conditions.map(function (cond) {\n      var conds = [];\n\n      for (var key in cond) {\n        conds.push({\n          key: key,\n          value: cond[key]\n        });\n      }\n\n      return conds.length > 1 ? conds : conds[0];\n    });\n  }\n\n  conditions = conditions.map(function (cond) {\n    var d = depth + 1,\n        op;\n\n    switch (cond.key) {\n      case \"$or\":\n      case \"$and\":\n      case \"$not\":\n        if (operator !== \"NOT\" && conditions.length === 1) {\n          d = depth; // not change tree depth\n        }\n\n        op = cond.key === \"$or\" ? \"OR\" : cond.key === \"$and\" ? \"AND\" : \"NOT\";\n        return createConditionClause(cond.value, op, d);\n\n      default:\n        return createFieldExpression(cond.key, cond.value);\n    }\n  }).filter(function (expr) {\n    return expr;\n  });\n  var paren;\n\n  if (operator === 'NOT') {\n    paren = depth > 0;\n    return (paren ? \"(\" : \"\") + \"NOT \" + conditions[0] + (paren ? \")\" : \"\");\n  } else {\n    paren = depth > 0 && conditions.length > 1;\n    return (paren ? \"(\" : \"\") + conditions.join(\" \" + operator + \" \") + (paren ? \")\" : \"\");\n  }\n}\n\nvar opMap = {\n  \"=\": \"=\",\n  \"$eq\": \"=\",\n  \"!=\": \"!=\",\n  \"$ne\": \"!=\",\n  \">\": \">\",\n  \"$gt\": \">\",\n  \"<\": \"<\",\n  \"$lt\": \"<\",\n  \">=\": \">=\",\n  \"$gte\": \">=\",\n  \"<=\": \"<=\",\n  \"$lte\": \"<=\",\n  \"$like\": \"LIKE\",\n  \"$nlike\": \"NOT LIKE\",\n  \"$in\": \"IN\",\n  \"$nin\": \"NOT IN\",\n  \"$includes\": \"INCLUDES\",\n  \"$excludes\": \"EXCLUDES\",\n  \"$exists\": \"EXISTS\"\n};\n/** @private **/\n\nfunction createFieldExpression(field, value) {\n  var op = \"$eq\"; // Assume the `$in` operator if value is an array and none was supplied.\n\n  if (_.isArray(value)) {\n    op = \"$in\";\n  } // Otherwise, if an object was passed then process the supplied ops.\n  else if (_.isObject(value)) {\n      var _value;\n\n      for (var k in value) {\n        if (k[0] === \"$\") {\n          op = k;\n          value = value[k];\n          break;\n        }\n      }\n    }\n\n  var sfop = opMap[op];\n\n  if (!sfop || _.isUndefined(value)) {\n    return null;\n  }\n\n  var valueExpr = createValueExpression(value);\n\n  if (_.isUndefined(valueExpr)) {\n    return null;\n  }\n\n  switch (sfop) {\n    case \"NOT LIKE\":\n      return \"(\" + [\"NOT\", field, 'LIKE', valueExpr].join(\" \") + \")\";\n\n    case \"EXISTS\":\n      return [field, value ? \"!=\" : \"=\", \"null\"].join(\" \");\n\n    default:\n      return [field, sfop, valueExpr].join(\" \");\n  }\n}\n/** @private **/\n\n\nfunction createValueExpression(value) {\n  if (isArray(value)) {\n    return value.length > 0 ? \"(\" + value.map(createValueExpression).join(\", \") + \")\" : undefined;\n  }\n\n  if (value instanceof SfDate) {\n    return value.toString();\n  }\n\n  if (_.isString(value)) {\n    return \"'\" + escapeSOQLString(value) + \"'\";\n  }\n\n  if (_.isNumber(value)) {\n    return value.toString();\n  }\n\n  if (_.isNull(value)) {\n    return \"null\";\n  }\n\n  return value;\n}\n/** @private **/\n\n\nfunction escapeSOQLString(str) {\n  return String(str || '').replace(/'/g, \"\\\\'\");\n}\n/** @private **/\n\n\nfunction isArray(a) {\n  return _.isObject(a) && _.isFunction(a.pop);\n}\n/** @private **/\n\n\nfunction createOrderByClause(sort) {\n  sort = sort || [];\n\n  if (_.isString(sort)) {\n    if (/,|\\s+(asc|desc)\\s*$/.test(sort)) {\n      // must be specified in pure \"order by\" clause. Return raw config.\n      return sort;\n    } // sort order in mongoose-style expression.\n    // e.g. \"FieldA -FieldB\" => \"ORDER BY FieldA ASC, FieldB DESC\"\n\n\n    sort = sort.split(/\\s+/).map(function (field) {\n      var dir = \"ASC\"; // ascending\n\n      var flag = field[0];\n\n      if (flag === '-') {\n        dir = \"DESC\";\n        field = field.substring(1);\n      } else if (flag === '+') {\n        field = field.substring(1);\n      }\n\n      return [field, dir];\n    });\n  } else if (!isArray(sort)) {\n    sort = _.keys(sort).map(function (field) {\n      var dir = sort[field];\n      return [field, dir];\n    });\n  }\n\n  return sort.map(function (s) {\n    var field = s[0],\n        dir = s[1];\n\n    switch (String(dir)) {\n      case \"DESC\":\n      case \"desc\":\n      case \"descending\":\n      case \"-\":\n      case \"-1\":\n        dir = \"DESC\";\n        break;\n\n      default:\n        dir = \"ASC\";\n    }\n\n    return field + \" \" + dir;\n  }).join(\", \");\n}\n\nexports.createSOQL = createSOQL;","map":{"version":3,"sources":["/Users/gcarminati/Desktop/OmniStudio/OmniProxy/react-express-proxy-sample/node_modules/jsforce/lib/soql-builder.js"],"names":["_","require","SfDate","createSOQL","query","soql","createFieldsClause","fields","includes","table","join","cond","createConditionClause","conditions","orderby","createOrderByClause","sort","limit","offset","childQueries","map","values","cquery","concat","operator","depth","isString","isArray","keys","key","value","conds","push","length","d","op","createFieldExpression","filter","expr","paren","opMap","field","isObject","_value","k","sfop","isUndefined","valueExpr","createValueExpression","undefined","toString","escapeSOQLString","isNumber","isNull","str","String","replace","a","isFunction","pop","test","split","dir","flag","substring","s","exports"],"mappings":"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","sourcesContent":["/**\n * @file Create and build SOQL string from configuration\n * @author Shinichi Tomita <shinichi.tomita@gmail.com>\n */\n\n'use strict';\n\nvar _      = require('lodash/core'),\n    SfDate = require(\"./date\");\n\n\n/**\n * Create SOQL\n * @private\n */\nfunction createSOQL(query) {\n  var soql = [\n    \"SELECT \",\n    createFieldsClause(query.fields, query.includes),\n    \" FROM \",\n    query.table\n  ].join(\"\");\n  var cond = createConditionClause(query.conditions);\n  if (cond) {\n    soql += \" WHERE \" + cond;\n  }\n  var orderby = createOrderByClause(query.sort);\n  if (orderby) {\n    soql += \" ORDER BY \" + orderby;\n  }\n  if (query.limit) {\n    soql += \" LIMIT \" + query.limit;\n  }\n  if (query.offset) {\n    soql += \" OFFSET \" + query.offset;\n  }\n  return soql;\n}\n\n/** @private **/\nfunction createFieldsClause(fields, childQueries) {\n  childQueries = _.map(_.values(childQueries || {}), function(cquery) {\n    return '(' + createSOQL(cquery) + ')';\n  });\n  return (fields || [ \"Id\" ]).concat(childQueries).join(', ');\n}\n\n/** @private **/\nfunction createConditionClause(conditions, operator, depth) {\n  if (_.isString(conditions)) {\n    return conditions;\n  }\n  conditions = conditions || [];\n  operator = operator || \"AND\";\n  depth = depth || 0;\n  if (!isArray(conditions)) { // if passed in hash object\n    conditions = _.keys(conditions).map(function(key) {\n      return {\n        key: key,\n        value: conditions[key]\n      };\n    });\n  } else {\n    conditions = conditions.map(function(cond) {\n      var conds = [];\n      for (var key in cond) {\n        conds.push({\n          key: key,\n          value: cond[key]\n        });\n      }\n      return conds.length>1 ? conds : conds[0];\n    });\n  }\n  conditions = conditions.map(function(cond) {\n    var d = depth+1, op;\n    switch (cond.key) {\n      case \"$or\" :\n      case \"$and\" :\n      case \"$not\" :\n        if (operator !== \"NOT\" && conditions.length === 1) {\n          d = depth; // not change tree depth\n        }\n        op = cond.key === \"$or\" ? \"OR\" :\n             cond.key === \"$and\" ? \"AND\" :\n             \"NOT\";\n        return createConditionClause(cond.value, op, d);\n      default:\n        return createFieldExpression(cond.key, cond.value);\n    }\n  }).filter(function(expr) { return expr; });\n\n  var paren;\n  if (operator === 'NOT') {\n    paren = depth > 0;\n    return (paren ? \"(\" : \"\") + \"NOT \" + conditions[0] + (paren ? \")\" : \"\");\n  } else {\n    paren = depth > 0 && conditions.length > 1;\n    return (paren ? \"(\" : \"\") + conditions.join(\" \"+operator+\" \") + (paren ? \")\" : \"\");\n  }\n}\n\nvar opMap = {\n  \"=\"     : \"=\",\n  \"$eq\"   : \"=\",\n  \"!=\"    : \"!=\",\n  \"$ne\"   : \"!=\",\n  \">\"     : \">\",\n  \"$gt\"   : \">\",\n  \"<\"     : \"<\",\n  \"$lt\"   : \"<\",\n  \">=\"    : \">=\",\n  \"$gte\"  : \">=\",\n  \"<=\"    : \"<=\",\n  \"$lte\"  : \"<=\",\n  \"$like\" : \"LIKE\",\n  \"$nlike\" : \"NOT LIKE\",\n  \"$in\"   : \"IN\",\n  \"$nin\"  : \"NOT IN\",\n  \"$includes\" : \"INCLUDES\",\n  \"$excludes\" : \"EXCLUDES\",\n  \"$exists\" : \"EXISTS\"\n};\n\n/** @private **/\nfunction createFieldExpression(field, value) {\n  var op = \"$eq\";\n\n  // Assume the `$in` operator if value is an array and none was supplied.\n  if (_.isArray(value)) { op = \"$in\"; }\n  // Otherwise, if an object was passed then process the supplied ops.\n  else if (_.isObject(value)) {\n    var _value;\n    for (var k in value) {\n      if (k[0] === \"$\") {\n        op = k;\n        value = value[k];\n        break;\n      }\n    }\n  }\n  var sfop = opMap[op];\n  if (!sfop || _.isUndefined(value)) { return null; }\n  var valueExpr = createValueExpression(value);\n  if (_.isUndefined(valueExpr)) { return null; }\n  switch (sfop) {\n    case \"NOT LIKE\":\n      return \"(\" + [ \"NOT\", field, 'LIKE', valueExpr ].join(\" \") + \")\";\n    case \"EXISTS\":\n      return [ field, value ? \"!=\" : \"=\", \"null\" ].join(\" \");\n    default:\n      return [ field, sfop, valueExpr ].join(\" \");\n  }\n}\n\n/** @private **/\nfunction createValueExpression(value) {\n  if (isArray(value)) {\n    return value.length > 0 ?\n           \"(\" + value.map(createValueExpression).join(\", \") + \")\" :\n           undefined;\n  }\n  if (value instanceof SfDate) {\n    return value.toString();\n  }\n  if (_.isString(value)) {\n    return \"'\" + escapeSOQLString(value) + \"'\";\n  }\n  if (_.isNumber(value)) {\n    return (value).toString();\n  }\n  if (_.isNull(value)) {\n    return \"null\";\n  }\n  return value;\n}\n\n/** @private **/\nfunction escapeSOQLString(str) {\n  return String(str || '').replace(/'/g, \"\\\\'\");\n}\n\n/** @private **/\nfunction isArray(a) {\n  return _.isObject(a) && _.isFunction(a.pop);\n}\n\n\n/** @private **/\nfunction createOrderByClause(sort) {\n  sort = sort || [];\n  if (_.isString(sort)) {\n    if (/,|\\s+(asc|desc)\\s*$/.test(sort)) {\n      // must be specified in pure \"order by\" clause. Return raw config.\n      return sort;\n    }\n    // sort order in mongoose-style expression.\n    // e.g. \"FieldA -FieldB\" => \"ORDER BY FieldA ASC, FieldB DESC\"\n    sort = sort.split(/\\s+/).map(function(field) {\n      var dir = \"ASC\"; // ascending\n      var flag = field[0];\n      if (flag === '-') {\n        dir = \"DESC\";\n        field = field.substring(1);\n      } else if (flag === '+') {\n        field = field.substring(1);\n      }\n      return [ field, dir ];\n    });\n  } else if (!isArray(sort)) {\n    sort = _.keys(sort).map(function(field) {\n      var dir = sort[field];\n      return [ field, dir ];\n    });\n  }\n  return sort.map(function(s) {\n    var field = s[0], dir = s[1];\n    switch (String(dir)) {\n      case \"DESC\":\n      case \"desc\":\n      case \"descending\":\n      case \"-\":\n      case \"-1\":\n        dir = \"DESC\";\n        break;\n      default:\n        dir = \"ASC\";\n    }\n    return field + \" \" + dir;\n  }).join(\", \");\n}\n\n\nexports.createSOQL = createSOQL;\n"]},"metadata":{},"sourceType":"script"}